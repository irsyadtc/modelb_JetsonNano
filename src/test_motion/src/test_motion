#!/usr/bin/env python


import rospy, time
from geometry_msgs.msg import Twist
from std_msgs.msg import UInt8
import sys, select, termios, tty


msg = """
Virtual ticks value
---------------------------
Moving around:
        w
   a    s    d
        x

space key, s : force stop

CTRL-C to quit
"""

e = """
Communications Failed
"""

def getKey():
    tty.setraw(sys.stdin.fileno())
    rlist, _, _ = select.select([sys.stdin], [], [], 0.1)
    if rlist:
        key = sys.stdin.read(1)
    else:
        key = ''

    termios.tcsetattr(sys.stdin, termios.TCSADRAIN, settings)
    return key


if __name__=="__main__":
    settings = termios.tcgetattr(sys.stdin)

    rospy.init_node('test_motion')
    pub = rospy.Publisher('virtual_tick', UInt8, queue_size=10)
    rate = rospy.Rate(30)
    virtual_tick = UInt8()
    t_prev = time.clock()*1000

    try:
        print msg
        while(1):
            key = getKey()
			#key = 'w'
            t_duration = time.clock()*1000 - t_prev
            if (key == '\x03'):
                break
            elif key == 'w' :
                virtual_tick.data = 1
                t_prev = time.clock()
            elif key == 'x' :
                virtual_tick.data = 2
                t_prev = time.clock()
            elif key == 'a' :
                virtual_tick.data = 3
                t_prev = time.clock()
            elif key == 'd' :
                virtual_tick.data = 4
                t_prev = time.clock()
            elif key == ' ' or key == 's' :
				virtual_tick.data = 0
            elif t_duration > 2 :
                virtual_tick.data = 0
                print "over the time limit"
            #else :
             #   if (key == '\x03'):
              #      break
            print "duration: %s" % (t_duration)
            pub.publish(virtual_tick)

    except rospy.ROSInterruptException:
        print e
		

    #finally:
        #pub.publish(UInt8)

    termios.tcsetattr(sys.stdin, termios.TCSADRAIN, settings)
